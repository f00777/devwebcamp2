{"version":3,"sources":["horas.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","Object","values","includes","async","buscarEventos","id","horaSeleccionada","classList","remove","add","onclick","seleccionarHora","iniciarApp","e","target","name","horaPrevia","url","resultado","fetch","eventos","listadoHoras","li","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","obtenerHorasDisponibles","json"],"mappings":"CAAA,WAGI,GAFcA,SAASC,cAAc,UAE5B,CAEL,MAAMC,EAAYF,SAASC,cAAc,yBACnCE,EAAOH,SAASI,iBAAiB,gBACjCC,EAAiBL,SAASC,cAAc,mBACxCK,EAAkBN,SAASC,cAAc,oBAG/CC,EAAUK,iBAAiB,SAAUC,GACrCL,EAAKM,QAAQC,GAAOA,EAAIH,iBAAiB,SAAUC,IAEnD,IAAIG,EAAW,CACXC,cAAeV,EAAUW,OAAS,GAClCH,KAAML,EAAeQ,OAAS,IAGlC,IAAIC,OAAOC,OAAOJ,GAAUK,SAAS,IAAI,EAErCC,uBACUC,IAGN,MAAMC,EAAKb,EAAgBO,MACrBO,EAAmBpB,SAASC,cAAc,kBAAkBkB,OAElEC,EAAiBC,UAAUC,OAAO,8BAClCF,EAAiBC,UAAUE,IAAI,6BAE/BH,EAAiBI,QAAUC,EAG/BC,GAKJ,SAASlB,EAAgBmB,GACrBhB,EAASgB,EAAEC,OAAOC,MAAQF,EAAEC,OAAOf,MAGnCP,EAAgBO,MAAQ,GACxBR,EAAeQ,MAAQ,GACvB,MAAMiB,EAAa9B,SAASC,cAAc,8BACvC6B,GACCA,EAAWT,UAAUC,OAAO,6BAI7BR,OAAOC,OAAOJ,GAAUK,SAAS,KAGpCE,IAGJD,eAAeC,IACX,MAAMR,IAACA,EAAGE,aAAEA,GAAgBD,EACtBoB,EAAM,+BAA+BrB,kBAAoBE,IAEzDoB,QAAkBC,MAAMF,IAOlC,SAAiCG,GAE7B,MAAMC,EAAenC,SAASI,iBAAiB,aAC/C+B,EAAa1B,QAAQ2B,GAAMA,EAAGf,UAAUE,IAAI,+BAG5C,MAAMc,EAAeH,EAAQI,IAAIC,GAAUA,EAAOC,SAC5CC,EAAoBC,MAAMC,KAAKR,GACnBM,EAAkBG,OAAOR,IAAOC,EAAarB,SAASoB,EAAGS,QAAQC,SAEzErC,QAAQ2B,GAAMA,EAAGf,UAAUC,OAAO,+BAEnBtB,SAASI,iBAAiB,8CAElCK,QAAQsC,GAAQA,EAAKxC,iBAAiB,QAASkB,IAlBhEuB,OAFsBhB,EAAUiB,QAuBpC,SAASxB,EAAgBE,GAErB,MAAMG,EAAa9B,SAASC,cAAc,8BACvC6B,GACCA,EAAWT,UAAUC,OAAO,6BAIhCK,EAAEC,OAAOP,UAAUE,IAAI,6BAEvBjB,EAAgBO,MAAQc,EAAEC,OAAOiB,QAAQC,OAGzCzC,EAAeQ,MAAOb,SAASC,cAAc,wBAAwBY,QAlGjF","file":"horas.js","sourcesContent":["(function(){\n    const horas = document.querySelector('#horas');\n\n    if(horas){\n        \n        const categoria = document.querySelector('[name=\"categoria_id\"]');\n        const dias = document.querySelectorAll('[name=\"dia\"]');\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\n\n\n        categoria.addEventListener('change', terminoBusqueda);\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\n\n        let busqueda = {\n            categoria_id: +categoria.value || '',\n            dia: +inputHiddenDia.value || ''\n        };\n\n        if(!Object.values(busqueda).includes('')){\n\n            async function iniciarApp(){\n                await buscarEventos();\n\n                //resaltar la hora actual \n                const id = inputHiddenHora.value;\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`);\n\n                horaSeleccionada.classList.remove('horas__hora--deshabilitada');\n                horaSeleccionada.classList.add('horas__hora--seleccionada');\n                \n                horaSeleccionada.onclick = seleccionarHora;\n            }\n\n            iniciarApp();\n            \n        }\n\n\n        function terminoBusqueda(e){\n            busqueda[e.target.name] = e.target.value;\n\n            //Reiniciar los campos ocultos y el selector de hora\n            inputHiddenHora.value = '';\n            inputHiddenDia.value = '';\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\n            if(horaPrevia){\n                horaPrevia.classList.remove('horas__hora--seleccionada');\n            }\n\n            \n            if(Object.values(busqueda).includes('')){\n                return;\n            }\n            buscarEventos();\n        }\n\n        async function buscarEventos(){\n            const {dia, categoria_id} = busqueda;\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`\n            \n            const resultado = await fetch(url);\n            const eventos = await resultado.json();\n\n            obtenerHorasDisponibles(eventos);\n\n        }\n\n        function obtenerHorasDisponibles(eventos){\n            //Reiniciar las horas\n            const listadoHoras = document.querySelectorAll('#horas li');\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\n\n            //Comprobar eventos ya tomados, y quitar la variable de deshabilitado\n            const horasTomadas = eventos.map(evento => evento.hora_id);\n            const listadoHorasArray = Array.from(listadoHoras);\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\n\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\n\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\n            \n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\n        }\n\n        function seleccionarHora(e){\n            //Deshabilitar la hora previa si hay un nuevo click\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\n            if(horaPrevia){\n                horaPrevia.classList.remove('horas__hora--seleccionada');\n            }\n\n            //Agregar hora de seleccionado\n            e.target.classList.add('horas__hora--seleccionada');\n\n            inputHiddenHora.value = e.target.dataset.horaId;\n\n            //Llenar el campo oculto de d√≠a\n            inputHiddenDia.value =document.querySelector('[name=\"dia\"]:checked').value;\n            \n        }\n    }\n})();"]}